var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { gql } from 'apollo-boost';
export var ServerTypes = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    type Class implements Node {\n        id: ID!\n        sku: String!\n        title: String!\n        description: String!\n        defaultCoverUrl: URL!\n        smallCoverUrl: URL\n        largeCoverUrl: URL\n        customCoverUrl: URL\n        teacher: Teacher!\n        badges: [ClassBadge!]!\n        lessons: [ClassLesson!]!\n        lessonCount: Int!\n        durationInSeconds: Int!\n        url: URL\n        studentCount: Int!\n        viewer: ClassViewer\n    }\n\n    type ClassBadge {\n        type: ClassBadgeType!\n    }\n\n    enum ClassBadgeType {\n        ORIGINAL\n        STAFF_PICK\n    }\n\n    type ClassConnection {\n        edges: [ClassEdge!]!\n        nodes: [Class!]!\n        pageInfo: PageInfo!\n        totalCount: Int!\n    }\n\n    type ClassEdge {\n        cursor: String!\n        node: Class!\n    }\n\n    enum ClassEnrollmentType {\n        FREE\n        PAID\n    }\n\n    input ClassFilters {\n        category: String\n        subCategory: String\n        isHidden: Boolean\n        isEnrolled: Boolean\n    }\n\n    enum ClassLengthValues {\n        SHORTER\n        SHORT\n        MEDIUM\n        LONG\n    }\n\n    enum ClassLevel {\n        BEGINNER\n        INTERMEDIATE\n        ADVANCED\n        ALL_LEVELS\n    }\n\n    type ClassLesson {\n        title: String!\n        description: String!\n        rank: Int!\n        durationInSeconds: Int!\n        viewer: ClassLessonViewer\n        id: ID!\n    }\n\n    type ClassLessonViewer {\n        progressInSeconds: Int!\n    }\n\n    enum ClassListType {\n        FREE_CLASSES\n        POPULAR_CLASSES\n    }\n\n    type ClassViewer {\n        progressInSeconds: Int!\n        hasSavedClass: Boolean!\n        currentLesson: ClassLesson!\n    }\n\n    type Comment implements Node {\n        id: ID!\n        key: String!\n        parent: Comment\n        author: CommentAuthor!\n        replies: [Comment!]!\n        isReply: Boolean!\n        contentHTML: String!\n        viewerCanEdit: Boolean!\n        viewerHasLiked: Boolean!\n        createdAt: Int!\n        likes: Int!\n    }\n\n    type CommentAuthor implements Node {\n        id: ID!\n        name: String!\n        profileUrl: URL!\n        img: URL!\n        isTeacher: Boolean!\n        isTopTeacher: Boolean!\n        headline: String\n    }\n\n    input CompleteUserClassInput {\n        clientMutationId: String\n        classSku: String!\n    }\n\n    type CompleteUserClassPayload {\n        clientMutationId: String\n        completedClass: Class!\n    }\n\n    type ContentSection {\n        id: ID!\n        title: String\n        items(after: String, first: Int, before: String, last: Int): ContentSectionItemConnection\n    }\n\n    type ContentSectionItemConnection {\n        pageInfo: PageInfo\n        edges: [ContentSectionItemEdge]\n    }\n\n    union ContentSectionItem = Class\n\n    type ContentSectionItemEdge {\n        node: ContentSectionItem\n        cursor: String!\n    }\n\n    input CreateCommentInput {\n        clientMutationId: String\n        comment: String!\n        commentableId: String!\n        commentableType: String!\n    }\n\n    type CreateCommentPayload {\n        clientMutationId: String\n        newComment: Comment!\n    }\n\n    input DeleteCommentInput {\n        clientMutationId: String\n        id: Float!\n    }\n\n    type DeleteCommentPayload {\n        clientMutationId: String\n        id: Float!\n    }\n\n    type Facet {\n        name: String!\n        options: [FacetOption!]!\n    }\n\n    type FacetOption {\n        name: String!\n        count: Float!\n    }\n\n    input SkillSelection {\n        selected: Boolean!\n        skillId: ID!\n    }\n\n    input FollowSkillBySlugInput {\n        clientMutationId: String\n        skillSlug: String!\n    }\n\n    input OnboardingSkillSelectionInput {\n        clientMutationId: String\n        skillSelections: [SkillSelection!]!\n    }\n\n    type OnboardingSkillSelectionPayload {\n        clientMutationId: String\n        success: Boolean!\n    }\n\n    type FollowSkillBySlugPayload {\n        clientMutationId: String\n        skill: SkillTag\n    }\n\n    input FollowSkillInput {\n        clientMutationId: String\n        skillId: ID!\n    }\n\n    type FollowSkillPayload {\n        clientMutationId: String\n        skill: SkillTag\n    }\n\n    input HideUserClassInput {\n        clientMutationId: String\n        classSku: String!\n    }\n\n    type HideUserClassPayload {\n        clientMutationId: String\n        hiddenClass: Class!\n    }\n\n    input Input {\n        clientMutationId: String\n    }\n\n    type Mutation {\n        completeUserClass(input: CompleteUserClassInput!): CompleteUserClassPayload!\n        createComment(input: CreateCommentInput!): CreateCommentPayload!\n        createMembership(input: CreateMembershipInput!): CreateMembershipPayload!\n        createSetupIntent(input: CreateSetupIntentInput!): CreateSetupIntentPayload!\n        deleteComment(input: DeleteCommentInput!): DeleteCommentPayload!\n        followUser(input: FollowUserInput!): FollowUserPayload\n        hideUserClass(input: HideUserClassInput!): HideUserClassPayload!\n        like(input: LikeInput!): LikePayload!\n        markNotificationsAsRead(input: MarkNotificationsAsReadInput!): MarkNotificationsAsReadPayload!\n        markGamificationActionToastShown(\n            input: MarkGamificationActionToastShownInput!\n        ): MarkGamificationActionToastShownPayload!\n        markGamificationCompletionMessageShown(\n            input: MarkGamificationCompletionMessageShownInput\n        ): MarkGamificationCompletionMessageShownPayload!\n        markGamificationActionPopoversShown(\n            input: MarkGamificationActionPopoversShownInput!\n        ): MarkGamificationActionPopoversShownPayload!\n        saveUserClass(input: SaveUserClassInput!): SaveUserClassPayload!\n        unfollowUser(input: UnfollowUserInput!): UnfollowUserPayload\n        unlike(input: UnlikeInput!): UnlikePayload!\n        unsaveUserClass(input: UnsaveUserClassInput!): UnsaveUserClassPayload!\n        updateComment(input: UpdateCommentInput!): UpdateCommentPayload!\n    }\n\n    interface Node {\n        id: ID!\n    }\n\n    type PageInfo {\n        startCursor: String\n        endCursor: String\n        hasNextPage: Boolean!\n        hasPreviousPage: Boolean!\n    }\n\n    enum PublishTime {\n        IN_LAST_DAY\n        IN_LAST_WEEK\n        IN_LAST_MONTH\n        IN_LAST_YEAR\n    }\n\n    enum GamificationStep {\n        JOIN_SKILLSHARE\n        WATCH_THREE_LESSONS\n        UPLOAD_PROJECT\n        FINISH_A_CLASS\n        JOIN_WORKSHOP\n    }\n\n    type GamificationAction {\n        title: String\n        popoverText: String\n        isCompleted: Boolean\n        showPopoverOnLoad: Boolean\n        linkUrl: String\n        showToast: Boolean\n    }\n\n    type GamificationResultItem {\n        actions: [GamificationAction]\n        showCompletionMessage: Boolean\n        action(step: GamificationStep!): GamificationAction\n    }\n\n    type RecommendedClassesConnection {\n        pageInfo: PageInfo!\n        edges: [RecommendedClassEdge!]\n    }\n\n    type RecommendedClassEdge {\n        node: Class!\n        cusror: String!\n    }\n\n    input MarkGamificationActionToastShownInput {\n        clientMutationId: String\n        step: GamificationStep!\n    }\n\n    type MarkGamificationActionToastShownPayload {\n        clientMutationId: String\n        action: GamificationAction!\n    }\n\n    input MarkGamificationCompletionMessageShownInput {\n        clientMutationId: String\n    }\n\n    type MarkGamificationCompletionMessageShownPayload {\n        clientMutationId: String\n    }\n\n    input MarkGamificationActionPopoversShownInput {\n        clientMutationId: String\n        steps: [GamificationStep!]!\n    }\n\n    type MarkGamificationActionPopoversShownPayload {\n        clientMutationId: String\n        actions: [GamificationAction!]!\n    }\n\n    enum StripePaymentMethodType {\n        CARD\n        SEPA_DEBIT\n    }\n\n    input CreateSetupIntentInput {\n        clientMutationId: String\n        currencyCode: String\n        paymentMethodType: StripePaymentMethodType!\n    }\n\n    type CreateSetupIntentPayload {\n        clientMutationId: String\n        clientSecret: String\n    }\n\n    enum PaymentMethodType {\n        CARD\n        SEPA_DEBIT\n        PAYTM\n    }\n\n    input CreateMembershipInput {\n        clientMutationId: String\n        couponCode: String\n        paymentMethodId: String!\n        paymentMethodType: PaymentMethodType!\n        planId: ID!\n        studentReferrerId: ID\n        surveySource: String\n        teacherReferrerId: ID\n        via: String\n    }\n\n    type CreateMembershipPayload {\n        clientMutationId: String\n        success: Boolean!\n    }\n\n    type Query {\n        classListByType(\n            first: Int\n            last: Int\n            after: String\n            before: String\n            type: ClassListType!\n            where: ClassFilters\n        ): ClassConnection!\n        contentSection(slug: String): ContentSection\n        project(key: String!): Project!\n        projectByKey(key: String!): Project!\n        comments(first: Int, after: String): ProjectCommentConnection!\n        search(\n            first: Int\n            last: Int\n            after: String\n            before: String\n            query: String!\n            where: SearchFilters\n        ): SearchResultItemConnection!\n        notifications(first: Int, after: String): NotificationConnection!\n        teacherNotifications(first: Int, after: String): NotificationConnection!\n        skills(query: String!, options: SearchOptions): [Skill!]!\n        teachers(query: String!, options: SearchOptions): [TeacherSearchResultItem!]!\n        viewer: User!\n        gamification: GamificationResultItem\n        siteAnnouncement: SiteAnnouncement\n        recommendedClasses(after: String, first: Int): RecommendedClassesConnection!\n        subscriptionCoupon(code: String!): SubscriptionCoupon\n    }\n\n    input SaveUserClassInput {\n        clientMutationId: String\n        classSku: String!\n    }\n\n    type SaveUserClassPayload {\n        clientMutationId: String\n        savedClass: Class!\n    }\n\n    input SearchFilters {\n        classLength: [ClassLengthValues!]\n        enrollmentType: [ClassEnrollmentType!]\n        hasBeenFeatured: Boolean\n        isSkillshareOriginal: Boolean\n        isStaffPick: Boolean\n        level: [ClassLevel!]\n        publishTime: [PublishTime!]\n        sku: [String!]\n        tag: [String!]\n    }\n\n    input SearchOptions {\n        exclude: [Int!] = []\n        addPlaceholder: Boolean = false\n        pageSize: Float = 10\n        pageIndex: Float = 0\n    }\n\n    type SearchResultEdgeCustom {\n        cursor: String!\n        node: Class!\n    }\n\n    type SearchResultItemConnection {\n        searchId: String!\n        facets: [Facet!]!\n        edges: [SearchResultEdgeCustom!]!\n        nodes: [Class!]!\n        pageInfo: PageInfo!\n        totalCount: Int!\n    }\n\n    type Skill {\n        id: Float\n        name: String\n        classes: Float\n        followers: Float\n        isApproved: Boolean\n        slug: String\n        isNew: Boolean\n    }\n\n    type SkillTag {\n        id: ID!\n        displayName: String!\n    }\n\n    type Teacher implements Node {\n        id: ID!\n        email: String!\n        firstName: String!\n        lastName: String!\n        username: String!\n        vanityUsername: String\n        mediumPictureUrl: URL\n        smallPictureUrl: URL\n        largePictureUrl: URL\n        classListByType(\n            first: Int\n            last: Int\n            after: String\n            before: String\n            type: UserClassListType!\n            where: ClassFilters\n        ): ClassConnection!\n        pictureUrl(size: UserProfilePictureSize): URL\n        name: String!\n        headline: String\n    }\n\n    type TeacherSearchResultItem {\n        id: Float\n        name: String\n        avatar: String\n        followers: Float\n        url: String\n    }\n\n    input UnsaveUserClassInput {\n        clientMutationId: String\n        classSku: String!\n    }\n\n    type UnsaveUserClassPayload {\n        clientMutationId: String\n        unsavedClass: Class!\n    }\n\n    input UpdateCommentInput {\n        clientMutationId: String\n        id: Float!\n        contentHTML: String!\n    }\n\n    type UpdateCommentPayload {\n        clientMutationId: String\n        updatedComment: Comment!\n    }\n\n    scalar URL\n\n    type Subscription implements Node {\n        id: ID!\n        isActive: Boolean!\n        isPaused: Boolean!\n        canResume: Boolean!\n        canUpgrade: Boolean!\n    }\n\n    type User implements Node {\n        id: ID!\n        email: String!\n        firstName: String!\n        lastName: String!\n        username: String!\n        vanityUsername: String\n        headline: String\n        isTeacher: Boolean!\n        isTopTeacher: Boolean!\n        hasTeamDomain: Boolean!\n        hasPublishedClass: Boolean!\n        mediumPictureUrl: URL\n        smallPictureUrl: URL\n        largePictureUrl: URL\n        classListByType(\n            first: Int\n            last: Int\n            after: String\n            before: String\n            type: UserClassListType!\n            where: ClassFilters\n        ): ClassConnection!\n        notifications: UserNotifications!\n        subscription: Subscription\n        pictureUrl(size: UserProfilePictureSize): URL\n        viewer: UserViewer!\n    }\n\n    type UserViewer {\n        isFollowing: Boolean\n    }\n\n    enum UserClassListType {\n        ENROLLED_CLASSES\n        RECOMMENDED_CLASSES\n        SAVED_CLASSES\n    }\n\n    type UserNotifications implements Node {\n        id: ID!\n        count: Float!\n    }\n\n    enum UserProfilePictureSize {\n        SMALL\n        MEDIUM\n        LARGE\n    }\n\n    type Notification implements Node {\n        id: ID!\n        isRead: Boolean!\n        url: URL\n        actors: [User!]!\n        previewText: String\n        buttonText: String\n        image: Image\n        message: String!\n        createdAt: String!\n    }\n\n    type Image {\n        sources: [ImageSource!]!\n    }\n\n    type ImageSource {\n        url: URL!\n        width: Int!\n        height: Int!\n    }\n\n    type NotificationConnection {\n        edges: [NotificationEdge!]!\n        pageInfo: PageInfo!\n    }\n\n    type NotificationEdge {\n        cursor: String!\n        node: Notification!\n    }\n\n    input MarkNotificationsAsReadInput {\n        clientMutationId: String\n        before: String!\n    }\n\n    type MarkNotificationsAsReadPayload {\n        clientMutationId: String\n        notifications: [Notification!]!\n    }\n\n    enum bannerTypes {\n        COUPON\n        DEFAULT\n        PAUSED\n        REFERRAL\n    }\n\n    type SiteAnnouncement {\n        contentHTML: String!\n        linkUrl: String\n        requiresAuthentication: Boolean!\n        type: bannerTypes!\n    }\n\n    type Project implements Node & Likeable & Editable {\n        id: ID!\n        key: String!\n        comments: [Comment!]!\n        title: String!\n        contentHTML: String!\n        coverImage: Image\n        author: User!\n        viewer: ProjectViewer!\n        likeCount: Int!\n        viewCount: Int!\n        class: Class\n    }\n\n    type ProjectCommentConnection {\n        edges: [ProjectCommentEdge!]!\n        pageInfo: PageInfo!\n        totalCount: Int!\n    }\n\n    type ProjectCommentEdge {\n        cursor: String!\n        node: Comment!\n    }\n\n    type ProjectViewer implements LikeableViewer & EditableViewer {\n        hasLiked: Boolean!\n        canEdit: Boolean!\n    }\n\n    interface Likeable {\n        viewer: LikeableViewer!\n        likeCount: Int!\n    }\n\n    interface LikeableViewer {\n        hasLiked: Boolean!\n    }\n\n    interface Editable {\n        viewer: EditableViewer!\n    }\n\n    interface EditableViewer {\n        canEdit: Boolean!\n    }\n\n    input LikeInput {\n        clientMutationId: String\n        likeableId: ID!\n    }\n\n    input UnlikeInput {\n        clientMutationId: String\n        likeableId: ID!\n    }\n\n    type LikePayload {\n        clientMutationId: String\n        likeable: Likeable!\n    }\n\n    type UnlikePayload {\n        clientMutationId: String\n        likeable: Likeable!\n    }\n\n    input UnfollowSkillBySlugInput {\n        clientMutationId: String\n        skillSlug: String!\n    }\n\n    type UnfollowSkillBySlugPayload {\n        clientMutationId: String\n        skill: SkillTag\n    }\n\n    input UnfollowSkillInput {\n        clientMutationId: String\n        skillId: ID!\n    }\n\n    type UnfollowSkillPayload {\n        clientMutationId: String\n        skill: SkillTag\n    }\n\n    input FollowUserInput {\n        clientMutationId: String\n        userId: ID!\n    }\n\n    input UnfollowUserInput {\n        clientMutationId: String\n        userId: ID!\n    }\n\n    type FollowUserPayload {\n        clientMutationId: String\n    }\n\n    type UnfollowUserPayload {\n        clientMutationId: String\n    }\n\n    type Interval {\n        count: Int!\n        unit: IntervalUnit!\n    }\n\n    enum IntervalUnit {\n        DAYS\n        MONTHS\n    }\n\n    interface SubscriptionCoupon {\n        code: String!\n        sponsor: User\n    }\n\n    type ScholarshipCoupon implements SubscriptionCoupon {\n        code: String!\n        sponsor: User\n        length: Interval!\n    }\n\n    type PercentageOffCoupon implements SubscriptionCoupon {\n        code: String!\n        sponsor: User\n        percentDiscount: Int!\n    }\n\n    type FreeTrialCoupon implements SubscriptionCoupon {\n        code: String!\n        sponsor: User\n        trialLength: Interval!\n    }\n"], ["\n    type Class implements Node {\n        id: ID!\n        sku: String!\n        title: String!\n        description: String!\n        defaultCoverUrl: URL!\n        smallCoverUrl: URL\n        largeCoverUrl: URL\n        customCoverUrl: URL\n        teacher: Teacher!\n        badges: [ClassBadge!]!\n        lessons: [ClassLesson!]!\n        lessonCount: Int!\n        durationInSeconds: Int!\n        url: URL\n        studentCount: Int!\n        viewer: ClassViewer\n    }\n\n    type ClassBadge {\n        type: ClassBadgeType!\n    }\n\n    enum ClassBadgeType {\n        ORIGINAL\n        STAFF_PICK\n    }\n\n    type ClassConnection {\n        edges: [ClassEdge!]!\n        nodes: [Class!]!\n        pageInfo: PageInfo!\n        totalCount: Int!\n    }\n\n    type ClassEdge {\n        cursor: String!\n        node: Class!\n    }\n\n    enum ClassEnrollmentType {\n        FREE\n        PAID\n    }\n\n    input ClassFilters {\n        category: String\n        subCategory: String\n        isHidden: Boolean\n        isEnrolled: Boolean\n    }\n\n    enum ClassLengthValues {\n        SHORTER\n        SHORT\n        MEDIUM\n        LONG\n    }\n\n    enum ClassLevel {\n        BEGINNER\n        INTERMEDIATE\n        ADVANCED\n        ALL_LEVELS\n    }\n\n    type ClassLesson {\n        title: String!\n        description: String!\n        rank: Int!\n        durationInSeconds: Int!\n        viewer: ClassLessonViewer\n        id: ID!\n    }\n\n    type ClassLessonViewer {\n        progressInSeconds: Int!\n    }\n\n    enum ClassListType {\n        FREE_CLASSES\n        POPULAR_CLASSES\n    }\n\n    type ClassViewer {\n        progressInSeconds: Int!\n        hasSavedClass: Boolean!\n        currentLesson: ClassLesson!\n    }\n\n    type Comment implements Node {\n        id: ID!\n        key: String!\n        parent: Comment\n        author: CommentAuthor!\n        replies: [Comment!]!\n        isReply: Boolean!\n        contentHTML: String!\n        viewerCanEdit: Boolean!\n        viewerHasLiked: Boolean!\n        createdAt: Int!\n        likes: Int!\n    }\n\n    type CommentAuthor implements Node {\n        id: ID!\n        name: String!\n        profileUrl: URL!\n        img: URL!\n        isTeacher: Boolean!\n        isTopTeacher: Boolean!\n        headline: String\n    }\n\n    input CompleteUserClassInput {\n        clientMutationId: String\n        classSku: String!\n    }\n\n    type CompleteUserClassPayload {\n        clientMutationId: String\n        completedClass: Class!\n    }\n\n    type ContentSection {\n        id: ID!\n        title: String\n        items(after: String, first: Int, before: String, last: Int): ContentSectionItemConnection\n    }\n\n    type ContentSectionItemConnection {\n        pageInfo: PageInfo\n        edges: [ContentSectionItemEdge]\n    }\n\n    union ContentSectionItem = Class\n\n    type ContentSectionItemEdge {\n        node: ContentSectionItem\n        cursor: String!\n    }\n\n    input CreateCommentInput {\n        clientMutationId: String\n        comment: String!\n        commentableId: String!\n        commentableType: String!\n    }\n\n    type CreateCommentPayload {\n        clientMutationId: String\n        newComment: Comment!\n    }\n\n    input DeleteCommentInput {\n        clientMutationId: String\n        id: Float!\n    }\n\n    type DeleteCommentPayload {\n        clientMutationId: String\n        id: Float!\n    }\n\n    type Facet {\n        name: String!\n        options: [FacetOption!]!\n    }\n\n    type FacetOption {\n        name: String!\n        count: Float!\n    }\n\n    input SkillSelection {\n        selected: Boolean!\n        skillId: ID!\n    }\n\n    input FollowSkillBySlugInput {\n        clientMutationId: String\n        skillSlug: String!\n    }\n\n    input OnboardingSkillSelectionInput {\n        clientMutationId: String\n        skillSelections: [SkillSelection!]!\n    }\n\n    type OnboardingSkillSelectionPayload {\n        clientMutationId: String\n        success: Boolean!\n    }\n\n    type FollowSkillBySlugPayload {\n        clientMutationId: String\n        skill: SkillTag\n    }\n\n    input FollowSkillInput {\n        clientMutationId: String\n        skillId: ID!\n    }\n\n    type FollowSkillPayload {\n        clientMutationId: String\n        skill: SkillTag\n    }\n\n    input HideUserClassInput {\n        clientMutationId: String\n        classSku: String!\n    }\n\n    type HideUserClassPayload {\n        clientMutationId: String\n        hiddenClass: Class!\n    }\n\n    input Input {\n        clientMutationId: String\n    }\n\n    type Mutation {\n        completeUserClass(input: CompleteUserClassInput!): CompleteUserClassPayload!\n        createComment(input: CreateCommentInput!): CreateCommentPayload!\n        createMembership(input: CreateMembershipInput!): CreateMembershipPayload!\n        createSetupIntent(input: CreateSetupIntentInput!): CreateSetupIntentPayload!\n        deleteComment(input: DeleteCommentInput!): DeleteCommentPayload!\n        followUser(input: FollowUserInput!): FollowUserPayload\n        hideUserClass(input: HideUserClassInput!): HideUserClassPayload!\n        like(input: LikeInput!): LikePayload!\n        markNotificationsAsRead(input: MarkNotificationsAsReadInput!): MarkNotificationsAsReadPayload!\n        markGamificationActionToastShown(\n            input: MarkGamificationActionToastShownInput!\n        ): MarkGamificationActionToastShownPayload!\n        markGamificationCompletionMessageShown(\n            input: MarkGamificationCompletionMessageShownInput\n        ): MarkGamificationCompletionMessageShownPayload!\n        markGamificationActionPopoversShown(\n            input: MarkGamificationActionPopoversShownInput!\n        ): MarkGamificationActionPopoversShownPayload!\n        saveUserClass(input: SaveUserClassInput!): SaveUserClassPayload!\n        unfollowUser(input: UnfollowUserInput!): UnfollowUserPayload\n        unlike(input: UnlikeInput!): UnlikePayload!\n        unsaveUserClass(input: UnsaveUserClassInput!): UnsaveUserClassPayload!\n        updateComment(input: UpdateCommentInput!): UpdateCommentPayload!\n    }\n\n    interface Node {\n        id: ID!\n    }\n\n    type PageInfo {\n        startCursor: String\n        endCursor: String\n        hasNextPage: Boolean!\n        hasPreviousPage: Boolean!\n    }\n\n    enum PublishTime {\n        IN_LAST_DAY\n        IN_LAST_WEEK\n        IN_LAST_MONTH\n        IN_LAST_YEAR\n    }\n\n    enum GamificationStep {\n        JOIN_SKILLSHARE\n        WATCH_THREE_LESSONS\n        UPLOAD_PROJECT\n        FINISH_A_CLASS\n        JOIN_WORKSHOP\n    }\n\n    type GamificationAction {\n        title: String\n        popoverText: String\n        isCompleted: Boolean\n        showPopoverOnLoad: Boolean\n        linkUrl: String\n        showToast: Boolean\n    }\n\n    type GamificationResultItem {\n        actions: [GamificationAction]\n        showCompletionMessage: Boolean\n        action(step: GamificationStep!): GamificationAction\n    }\n\n    type RecommendedClassesConnection {\n        pageInfo: PageInfo!\n        edges: [RecommendedClassEdge!]\n    }\n\n    type RecommendedClassEdge {\n        node: Class!\n        cusror: String!\n    }\n\n    input MarkGamificationActionToastShownInput {\n        clientMutationId: String\n        step: GamificationStep!\n    }\n\n    type MarkGamificationActionToastShownPayload {\n        clientMutationId: String\n        action: GamificationAction!\n    }\n\n    input MarkGamificationCompletionMessageShownInput {\n        clientMutationId: String\n    }\n\n    type MarkGamificationCompletionMessageShownPayload {\n        clientMutationId: String\n    }\n\n    input MarkGamificationActionPopoversShownInput {\n        clientMutationId: String\n        steps: [GamificationStep!]!\n    }\n\n    type MarkGamificationActionPopoversShownPayload {\n        clientMutationId: String\n        actions: [GamificationAction!]!\n    }\n\n    enum StripePaymentMethodType {\n        CARD\n        SEPA_DEBIT\n    }\n\n    input CreateSetupIntentInput {\n        clientMutationId: String\n        currencyCode: String\n        paymentMethodType: StripePaymentMethodType!\n    }\n\n    type CreateSetupIntentPayload {\n        clientMutationId: String\n        clientSecret: String\n    }\n\n    enum PaymentMethodType {\n        CARD\n        SEPA_DEBIT\n        PAYTM\n    }\n\n    input CreateMembershipInput {\n        clientMutationId: String\n        couponCode: String\n        paymentMethodId: String!\n        paymentMethodType: PaymentMethodType!\n        planId: ID!\n        studentReferrerId: ID\n        surveySource: String\n        teacherReferrerId: ID\n        via: String\n    }\n\n    type CreateMembershipPayload {\n        clientMutationId: String\n        success: Boolean!\n    }\n\n    type Query {\n        classListByType(\n            first: Int\n            last: Int\n            after: String\n            before: String\n            type: ClassListType!\n            where: ClassFilters\n        ): ClassConnection!\n        contentSection(slug: String): ContentSection\n        project(key: String!): Project!\n        projectByKey(key: String!): Project!\n        comments(first: Int, after: String): ProjectCommentConnection!\n        search(\n            first: Int\n            last: Int\n            after: String\n            before: String\n            query: String!\n            where: SearchFilters\n        ): SearchResultItemConnection!\n        notifications(first: Int, after: String): NotificationConnection!\n        teacherNotifications(first: Int, after: String): NotificationConnection!\n        skills(query: String!, options: SearchOptions): [Skill!]!\n        teachers(query: String!, options: SearchOptions): [TeacherSearchResultItem!]!\n        viewer: User!\n        gamification: GamificationResultItem\n        siteAnnouncement: SiteAnnouncement\n        recommendedClasses(after: String, first: Int): RecommendedClassesConnection!\n        subscriptionCoupon(code: String!): SubscriptionCoupon\n    }\n\n    input SaveUserClassInput {\n        clientMutationId: String\n        classSku: String!\n    }\n\n    type SaveUserClassPayload {\n        clientMutationId: String\n        savedClass: Class!\n    }\n\n    input SearchFilters {\n        classLength: [ClassLengthValues!]\n        enrollmentType: [ClassEnrollmentType!]\n        hasBeenFeatured: Boolean\n        isSkillshareOriginal: Boolean\n        isStaffPick: Boolean\n        level: [ClassLevel!]\n        publishTime: [PublishTime!]\n        sku: [String!]\n        tag: [String!]\n    }\n\n    input SearchOptions {\n        exclude: [Int!] = []\n        addPlaceholder: Boolean = false\n        pageSize: Float = 10\n        pageIndex: Float = 0\n    }\n\n    type SearchResultEdgeCustom {\n        cursor: String!\n        node: Class!\n    }\n\n    type SearchResultItemConnection {\n        searchId: String!\n        facets: [Facet!]!\n        edges: [SearchResultEdgeCustom!]!\n        nodes: [Class!]!\n        pageInfo: PageInfo!\n        totalCount: Int!\n    }\n\n    type Skill {\n        id: Float\n        name: String\n        classes: Float\n        followers: Float\n        isApproved: Boolean\n        slug: String\n        isNew: Boolean\n    }\n\n    type SkillTag {\n        id: ID!\n        displayName: String!\n    }\n\n    type Teacher implements Node {\n        id: ID!\n        email: String!\n        firstName: String!\n        lastName: String!\n        username: String!\n        vanityUsername: String\n        mediumPictureUrl: URL\n        smallPictureUrl: URL\n        largePictureUrl: URL\n        classListByType(\n            first: Int\n            last: Int\n            after: String\n            before: String\n            type: UserClassListType!\n            where: ClassFilters\n        ): ClassConnection!\n        pictureUrl(size: UserProfilePictureSize): URL\n        name: String!\n        headline: String\n    }\n\n    type TeacherSearchResultItem {\n        id: Float\n        name: String\n        avatar: String\n        followers: Float\n        url: String\n    }\n\n    input UnsaveUserClassInput {\n        clientMutationId: String\n        classSku: String!\n    }\n\n    type UnsaveUserClassPayload {\n        clientMutationId: String\n        unsavedClass: Class!\n    }\n\n    input UpdateCommentInput {\n        clientMutationId: String\n        id: Float!\n        contentHTML: String!\n    }\n\n    type UpdateCommentPayload {\n        clientMutationId: String\n        updatedComment: Comment!\n    }\n\n    scalar URL\n\n    type Subscription implements Node {\n        id: ID!\n        isActive: Boolean!\n        isPaused: Boolean!\n        canResume: Boolean!\n        canUpgrade: Boolean!\n    }\n\n    type User implements Node {\n        id: ID!\n        email: String!\n        firstName: String!\n        lastName: String!\n        username: String!\n        vanityUsername: String\n        headline: String\n        isTeacher: Boolean!\n        isTopTeacher: Boolean!\n        hasTeamDomain: Boolean!\n        hasPublishedClass: Boolean!\n        mediumPictureUrl: URL\n        smallPictureUrl: URL\n        largePictureUrl: URL\n        classListByType(\n            first: Int\n            last: Int\n            after: String\n            before: String\n            type: UserClassListType!\n            where: ClassFilters\n        ): ClassConnection!\n        notifications: UserNotifications!\n        subscription: Subscription\n        pictureUrl(size: UserProfilePictureSize): URL\n        viewer: UserViewer!\n    }\n\n    type UserViewer {\n        isFollowing: Boolean\n    }\n\n    enum UserClassListType {\n        ENROLLED_CLASSES\n        RECOMMENDED_CLASSES\n        SAVED_CLASSES\n    }\n\n    type UserNotifications implements Node {\n        id: ID!\n        count: Float!\n    }\n\n    enum UserProfilePictureSize {\n        SMALL\n        MEDIUM\n        LARGE\n    }\n\n    type Notification implements Node {\n        id: ID!\n        isRead: Boolean!\n        url: URL\n        actors: [User!]!\n        previewText: String\n        buttonText: String\n        image: Image\n        message: String!\n        createdAt: String!\n    }\n\n    type Image {\n        sources: [ImageSource!]!\n    }\n\n    type ImageSource {\n        url: URL!\n        width: Int!\n        height: Int!\n    }\n\n    type NotificationConnection {\n        edges: [NotificationEdge!]!\n        pageInfo: PageInfo!\n    }\n\n    type NotificationEdge {\n        cursor: String!\n        node: Notification!\n    }\n\n    input MarkNotificationsAsReadInput {\n        clientMutationId: String\n        before: String!\n    }\n\n    type MarkNotificationsAsReadPayload {\n        clientMutationId: String\n        notifications: [Notification!]!\n    }\n\n    enum bannerTypes {\n        COUPON\n        DEFAULT\n        PAUSED\n        REFERRAL\n    }\n\n    type SiteAnnouncement {\n        contentHTML: String!\n        linkUrl: String\n        requiresAuthentication: Boolean!\n        type: bannerTypes!\n    }\n\n    type Project implements Node & Likeable & Editable {\n        id: ID!\n        key: String!\n        comments: [Comment!]!\n        title: String!\n        contentHTML: String!\n        coverImage: Image\n        author: User!\n        viewer: ProjectViewer!\n        likeCount: Int!\n        viewCount: Int!\n        class: Class\n    }\n\n    type ProjectCommentConnection {\n        edges: [ProjectCommentEdge!]!\n        pageInfo: PageInfo!\n        totalCount: Int!\n    }\n\n    type ProjectCommentEdge {\n        cursor: String!\n        node: Comment!\n    }\n\n    type ProjectViewer implements LikeableViewer & EditableViewer {\n        hasLiked: Boolean!\n        canEdit: Boolean!\n    }\n\n    interface Likeable {\n        viewer: LikeableViewer!\n        likeCount: Int!\n    }\n\n    interface LikeableViewer {\n        hasLiked: Boolean!\n    }\n\n    interface Editable {\n        viewer: EditableViewer!\n    }\n\n    interface EditableViewer {\n        canEdit: Boolean!\n    }\n\n    input LikeInput {\n        clientMutationId: String\n        likeableId: ID!\n    }\n\n    input UnlikeInput {\n        clientMutationId: String\n        likeableId: ID!\n    }\n\n    type LikePayload {\n        clientMutationId: String\n        likeable: Likeable!\n    }\n\n    type UnlikePayload {\n        clientMutationId: String\n        likeable: Likeable!\n    }\n\n    input UnfollowSkillBySlugInput {\n        clientMutationId: String\n        skillSlug: String!\n    }\n\n    type UnfollowSkillBySlugPayload {\n        clientMutationId: String\n        skill: SkillTag\n    }\n\n    input UnfollowSkillInput {\n        clientMutationId: String\n        skillId: ID!\n    }\n\n    type UnfollowSkillPayload {\n        clientMutationId: String\n        skill: SkillTag\n    }\n\n    input FollowUserInput {\n        clientMutationId: String\n        userId: ID!\n    }\n\n    input UnfollowUserInput {\n        clientMutationId: String\n        userId: ID!\n    }\n\n    type FollowUserPayload {\n        clientMutationId: String\n    }\n\n    type UnfollowUserPayload {\n        clientMutationId: String\n    }\n\n    type Interval {\n        count: Int!\n        unit: IntervalUnit!\n    }\n\n    enum IntervalUnit {\n        DAYS\n        MONTHS\n    }\n\n    interface SubscriptionCoupon {\n        code: String!\n        sponsor: User\n    }\n\n    type ScholarshipCoupon implements SubscriptionCoupon {\n        code: String!\n        sponsor: User\n        length: Interval!\n    }\n\n    type PercentageOffCoupon implements SubscriptionCoupon {\n        code: String!\n        sponsor: User\n        percentDiscount: Int!\n    }\n\n    type FreeTrialCoupon implements SubscriptionCoupon {\n        code: String!\n        sponsor: User\n        trialLength: Interval!\n    }\n"])));
var templateObject_1;
//# sourceMappingURL=server.js.map