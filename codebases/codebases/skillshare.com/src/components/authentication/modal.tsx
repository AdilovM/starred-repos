var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React from 'react';
import styled from 'styled-components';
import { color, minWidthForScreen } from '../../themes/utils';
import { ReactModalAdapter } from '../modal';
var StyledReactModal = styled(ReactModalAdapter)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    &__content {\n        background-color: ", ";\n        padding: 0;\n        z-index: 10;\n        border-radius: 3px;\n        position: relative;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        margin-right: 120px;\n        height: auto;\n        width: 668px;\n        cursor: default;\n        outline: none;\n\n        @media screen and (max-width: ", ") {\n            top: 10%;\n            transform: translate(-50%, 0);\n            margin-bottom: 50px;\n        }\n\n        @media screen and (max-width: ", ") {\n            top: 0;\n            left: 0;\n            transform: none;\n            margin: 8px;\n            width: calc(100% - 16px);\n            border-radius: 8px;\n        }\n    }\n\n    &__overlay {\n        width: 100vw;\n        height: 100vh;\n        top: 0;\n        left: 0;\n        position: fixed;\n        z-index: 11000;\n        background-color: rgba(0, 0, 0, 0.8);\n        cursor: zoom-out;\n\n        @media screen and (max-width: ", ") {\n            overflow: auto;\n        }\n    }\n\n    .close-icon {\n        position: absolute;\n        right: 16px;\n        top: 20px;\n\n        @media screen and (max-width: ", ") {\n            color: ", ";\n        }\n    }\n"], ["\n    &__content {\n        background-color: ", ";\n        padding: 0;\n        z-index: 10;\n        border-radius: 3px;\n        position: relative;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        margin-right: 120px;\n        height: auto;\n        width: 668px;\n        cursor: default;\n        outline: none;\n\n        @media screen and (max-width: ", ") {\n            top: 10%;\n            transform: translate(-50%, 0);\n            margin-bottom: 50px;\n        }\n\n        @media screen and (max-width: ", ") {\n            top: 0;\n            left: 0;\n            transform: none;\n            margin: 8px;\n            width: calc(100% - 16px);\n            border-radius: 8px;\n        }\n    }\n\n    &__overlay {\n        width: 100vw;\n        height: 100vh;\n        top: 0;\n        left: 0;\n        position: fixed;\n        z-index: 11000;\n        background-color: rgba(0, 0, 0, 0.8);\n        cursor: zoom-out;\n\n        @media screen and (max-width: ", ") {\n            overflow: auto;\n        }\n    }\n\n    .close-icon {\n        position: absolute;\n        right: 16px;\n        top: 20px;\n\n        @media screen and (max-width: ", ") {\n            color: ", ";\n        }\n    }\n"])), color(function (c) { return c.white; }), minWidthForScreen('large'), minWidthForScreen('medium'), minWidthForScreen('large'), minWidthForScreen('small'), color(function (c) { return c.white; }));
export var AuthModal = function (_a) {
    var isModalOpen = _a.isModalOpen, closeModal = _a.closeModal, children = _a.children;
    return (React.createElement(StyledReactModal, { isOpen: isModalOpen, shouldCloseOnEsc: true, shouldCloseOnOverlayClick: true, onRequestClose: closeModal }, children));
};
var templateObject_1;
//# sourceMappingURL=modal.js.map