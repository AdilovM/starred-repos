// ========================================================================
// This file is auto-generated by the `yarn naptime:types` script
// ========================================================================

import NaptimeResource from 'bundles/naptimejs/resources/NaptimeResource';

// ========================================================================
// Definitions for resource data types
// ========================================================================

export type ProductType = 'VerifiedCertificate' | 'Specialization';

export type EnrollmentChoiceType =
  | 'BULKPAY_FULL_SPECIALIZATION'
  | 'BULKPAY_REMAINING_SPECIALIZATION_COURSES'
  | 'PURCHASE_SINGLE_COURSE'
  | 'ENROLL_COURSE'
  | 'AUDIT_COURSE'
  | 'ENROLL_THROUGH_PROGRAM'
  | 'ENROLL_THROUGH_GROUP'
  | 'ENROLL_THROUGH_S12N_PREPAID'
  | 'ENROLL_THROUGH_S12N_SUBSCRIPTION'
  | 'ENROLL_THROUGH_S12N_SUBSCRIPTION_TRIAL'
  | 'SUBSCRIBE_TO_CATALOG'
  | 'SUBSCRIBE_TO_CATALOG_TRIAL'
  | 'UPGRADE_TO_CATALOG_SUBSCRIPTION'
  | 'SUBSCRIBE_TO_COURSERA_PLUS'
  | 'ENROLL_THROUGH_COURSERA_PLUS';

export interface CatalogSubscriptionData {
  availableSubscriptions: Array<SubscriptionProduct>;
}

export interface EnrollmentChoiceDataSUBSCRIBE_TO_CATALOG {
  typeName: 'SUBSCRIBE_TO_CATALOG';
  definition: CatalogSubscriptionData;
}

export interface CourseraPlusS12nEnrollmentChoiceData {
  s12nId: string;
  subscription: SubscriptionProduct;
}

export interface CourseraPlusCourseEnrollmentChoiceData {
  courseId: string;
}

export interface CourseraPlusEnrollmentChoiceData {
  s12nSubscriptionEnrollmentChoiceData?: CourseraPlusS12nEnrollmentChoiceData | null;
  courseEnrollmentChoiceData?: CourseraPlusCourseEnrollmentChoiceData | null;
  courseraPlusPermutationToDisplay? : SubscriptionProduct | null; 
  hasExhaustedFreeTrial?: boolean | null;
}

export interface EnrollThroughCourseraPlusEnrollmentChoiceData {
  enrollmentChoiceData: CourseraPlusEnrollmentChoiceData;
}

export interface EnrollmentChoiceDataENROLL_THROUGH_COURSERA_PLUS {
  typeName: 'ENROLL_THROUGH_COURSERA_PLUS';
  definition: EnrollThroughCourseraPlusEnrollmentChoiceData;
}

export interface SubscribeToCourseraPlusEnrollmentChoiceData {
  enrollmentChoiceData: CourseraPlusEnrollmentChoiceData;
}

export interface EnrollmentChoiceDataSUBSCRIBE_TO_COURSERA_PLUS {
  typeName: 'SUBSCRIBE_TO_COURSERA_PLUS';
  definition: SubscribeToCourseraPlusEnrollmentChoiceData;
}

export type BillingCycle = 'MONTHLY' | 'ANNUAL' | 'BIANNUAL';

export type SubscriptionProductPropertiesStatus = 'ENABLED' | 'DISABLED';

export interface SubscriptionProductProperties {
  billingCycle: BillingCycle;
  numberOfCycles?: number | null;
  numberOfTrialDays?: number | null;
  status: SubscriptionProductPropertiesStatus;
}

export interface SubscriptionProduct {
  properties: {
    'org.coursera.product.SubscriptionProductProperties': SubscriptionProductProperties;
  };
  productType: ProductType;
  productItemId: string;
}

export interface S12nSubscriptionData {
  s12Ids: Array<string>;
  availableSubscriptions: Array<SubscriptionProduct>;
}

export interface EnrollmentChoiceDataENROLL_THROUGH_S12N_SUBSCRIPTION {
  typeName: 'ENROLL_THROUGH_S12N_SUBSCRIPTION';
  definition: S12nSubscriptionData;
}

export type EnrollmentChoiceData =
  | EnrollmentChoiceDataSUBSCRIBE_TO_CATALOG
  | EnrollmentChoiceDataENROLL_THROUGH_COURSERA_PLUS
  | EnrollmentChoiceDataSUBSCRIBE_TO_COURSERA_PLUS
  | EnrollmentChoiceDataENROLL_THROUGH_S12N_SUBSCRIPTION;

export type EnrollmentChoiceDataTypeName =
  | 'SUBSCRIBE_TO_CATALOG'
  | 'ENROLL_THROUGH_COURSERA_PLUS'
  | 'SUBSCRIBE_TO_COURSERA_PLUS'
  | 'ENROLL_THROUGH_S12N_SUBSCRIPTION';

export interface EnrollmentChoice {
  enrollmentChoiceType: EnrollmentChoiceType;
  enrollmentChoiceData?: EnrollmentChoiceData | null;
}

export type EnrollmentChoiceReasonCode =
  | 'ENROLLED'
  | 'ENROLLED_RESTRICTED_AUDIT'
  | 'PURCHASED_SINGLE_COURSE'
  | 'CAPSTONE_ACCESS_LOCKED'
  | 'SPECIALIZATION_BULK_PAID'
  | 'SPECIALIZATION_SUBSCRIBED'
  | 'REGION_BLOCKED'
  | 'NO_AVAILABLE_SESSION'
  | 'REACHED_MAX_ALLOWANCE'
  | 'SPECIALIZATION_UPGRADE_REQUIRED'
  | 'BLOCKED_ON_IOS'
  | 'CATALOG_SUBSCRIBED'
  | 'EARNED_S12N_CERTIFICATE';

export interface EnrollmentAvailableChoicesV1 {
  id: string;
  enrollmentChoices: Array<EnrollmentChoice>;
  courseId?: string | null;
  specializationId?: string | null;
  enrollmentChoiceReasonCode?: EnrollmentChoiceReasonCode | null;
}

// ========================================================================
// Definitions for naptime-link
// ========================================================================

export interface EnrollmentAvailableChoicesV1Connection {
  elements: Array<EnrollmentAvailableChoicesV1> | null;
}

// ========================================================================
// Definitions for naptime-link queries
// ========================================================================

export interface EnrollmentAvailableChoicesV1GetQuery {
  EnrollmentAvailableChoicesV1: {
    get: EnrollmentAvailableChoicesV1Connection | null;
  } | null;
}

export interface EnrollmentAvailableChoicesV1GetQueryVariables {
  id: string;
  includes?: string | null;
}

export interface EnrollmentAvailableChoicesV1MultiGetQuery {
  EnrollmentAvailableChoicesV1: {
    multiGet: EnrollmentAvailableChoicesV1Connection | null;
  } | null;
}

export interface EnrollmentAvailableChoicesV1MultiGetQueryVariables {
  ids: string;
  includes?: string | null;
}

// ========================================================================
// Definitions for naptime-js
// ========================================================================

// Recursively applies Partial<T> to supported culling by the `fields` param.
type PartialConstruction<T> = {
  [TKey in keyof T]?: T[TKey] extends Array<infer TElement>
    ? Array<PartialConstruction<TElement>>
    : T[TKey] extends object
    ? PartialConstruction<T[TKey]>
    : T[TKey];
};

export class EnrollmentAvailableChoicesV1NaptimeResource extends NaptimeResource {
  static RESOURCE_NAME = 'enrollmentAvailableChoices.v1' as const;

  id!: string;

  enrollmentChoices!: Array<EnrollmentChoice>;

  courseId!: string;

  specializationId?: string | null;

  enrollmentChoiceReasonCode?: EnrollmentChoiceReasonCode | null;

  // Intentionally "useless" to supply params type
  // eslint-disable-next-line @typescript-eslint/no-useless-constructor
  constructor(params: PartialConstruction<EnrollmentAvailableChoicesV1>) {
    super(params);
  }
}
