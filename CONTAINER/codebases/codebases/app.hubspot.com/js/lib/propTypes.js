'use es6';

import PropTypes from 'prop-types';
import { List, Map as ImmutableMap, OrderedMap, Set as ImmutableSet } from 'immutable';
import I18n from 'I18n';
import { APP_SECTIONS, ACCOUNT_TYPES, BROADCAST_STATUS_TYPE, BROADCAST_PUBLISH_TYPE, COMPOSER_MODES, INTERACTION_CATEGORIES, BROADCAST_MEDIA_TYPE, CONNECT_STEPS, INLINE_MESSAGE_MODES } from './constants';
import { logError } from './utils';
import ViewTypes from 'ui-addon-calendars/constants/CalendarViewTypes';
import Account from '../data/model/Account';
import User from '../data/model/User';
import Broadcast from '../data/model/Broadcast';
import BroadcastGroup from '../data/model/BroadcastGroup';
import BroadcastGroupMessage from '../data/model/BroadcastGroupMessage';
import Channel from '../data/model/Channel';
import DataFilter from '../data/model/DataFilter';
import Schedule from '../data/model/Schedule';
import ScheduleTime from '../data/model/ScheduleTime';
import Interaction from '../data/model/Interaction';
import Relationships from '../data/model/Relationships';
import BroadcastFeedItem from '../data/model/BroadcastFeedItem';
import FeedItem from '../data/model/FeedItem';
import FeedUser from '../data/model/FeedUser';
import FeedEvent from '../data/model/FeedEvent';
import Intel from '../data/model/Intel';
import PagePreview from '../data/model/PagePreview';
import FMFile from '../data/model/FMFile';
import Media from '../data/model/Media';
import Stream from '../data/model/Stream';
import StreamItem from '../data/model/StreamItem';
import SocialItemAction from '../data/model/SocialItemAction';
import AppInstall from '../data/model/AppInstall';
import TwitterStatus from '../data/model/TwitterStatus';
import Inbox from '../data/model/Inbox';
import Assist from '../data/model/Assist';
import Contact from '../data/model/Contact';
import Landscape from '../data/model/Landscape';
import LandscapeConfig from '../data/model/LandscapeConfig';
import Company from '../data/model/Company';
import ReportingPost from '../data/model/ReportingPost';
import ReportingPostMedia from '../data/model/ReportingPostMedia';
import HubSettings from '../data/model/HubSettings';
export var momentProp = function momentProp(props, propName, componentName) {
  if (props[propName] && !I18n.moment.isMoment(props[propName])) {
    logError("moment is required for " + propName + " of " + componentName);
  }
};
export var mapProp = PropTypes.instanceOf(ImmutableMap);
export var listProp = PropTypes.instanceOf(List);
export var setProp = PropTypes.instanceOf(ImmutableSet);
export var orderedMapProp = PropTypes.instanceOf(OrderedMap);
export var uiProp = mapProp;
export var ui = mapProp;
export var appSectionProp = PropTypes.oneOf(Object.keys(APP_SECTIONS));
export var accountTypeProp = PropTypes.oneOf(Object.keys(ACCOUNT_TYPES));
export var connectStepProp = PropTypes.oneOf(Object.keys(CONNECT_STEPS));
export var composerModeProp = PropTypes.oneOf(Object.keys(COMPOSER_MODES)).isRequired;
export var inlineMessageModeProp = PropTypes.oneOf(Object.keys(INLINE_MESSAGE_MODES)).isRequired;
export var mediaTypeProp = PropTypes.oneOf([BROADCAST_MEDIA_TYPE.PHOTO, BROADCAST_MEDIA_TYPE.VIDEO]);
export var broadcastStatusTypeProp = PropTypes.oneOf(Object.keys(BROADCAST_STATUS_TYPE));
export var broadcastPublishTypeProp = PropTypes.oneOf(Object.keys(BROADCAST_PUBLISH_TYPE));
export var interactionCategoryProp = PropTypes.oneOf(Object.keys(INTERACTION_CATEGORIES));
export var channelsProp = listProp;
export var abstractChannelsProp = PropTypes.oneOfType([listProp, orderedMapProp]);
export var logicalChannelsProp = orderedMapProp;
export var campaignsProp = orderedMapProp;
export var usersProp = orderedMapProp;
export var streamsProp = orderedMapProp;
export var viewTypeProp = PropTypes.oneOf(Object.keys(ViewTypes));
export var dataFilterProp = PropTypes.instanceOf(DataFilter);
export var broadcastProp = PropTypes.instanceOf(Broadcast);
export var broadcastGroupProp = PropTypes.instanceOf(BroadcastGroup);
export var broadcastGroupMessageProp = PropTypes.instanceOf(BroadcastGroupMessage);
export var fileProp = PropTypes.instanceOf(FMFile);
export var mediaProp = PropTypes.instanceOf(Media);
export var channelProp = PropTypes.instanceOf(Channel);
export var logicalChannelProp = channelProp;
export var abstractChannelProp = channelProp;
export var accountProp = PropTypes.instanceOf(Account);
export var userProp = PropTypes.instanceOf(User);
export var gatesProp = PropTypes.instanceOf(ImmutableSet);
export var scheduleProp = PropTypes.instanceOf(Schedule);
export var scheduleTimeProp = PropTypes.instanceOf(ScheduleTime);
export var interactionProp = PropTypes.instanceOf(Interaction);
export var relationshipProp = PropTypes.instanceOf(Relationships);
export var intelProp = PropTypes.instanceOf(Intel);
export var inboxProp = PropTypes.instanceOf(Inbox);
export var broadcastFeedItemProp = PropTypes.instanceOf(BroadcastFeedItem);
export var feedItemProp = PropTypes.instanceOf(FeedItem);
export var feedUserProp = PropTypes.instanceOf(FeedUser);
export var contactProp = PropTypes.instanceOf(Contact);
export var feedEventProp = PropTypes.instanceOf(FeedEvent);
export var pagePreviewProp = PropTypes.instanceOf(PagePreview);
export var streamProp = PropTypes.instanceOf(Stream);
export var streamItemProp = PropTypes.instanceOf(StreamItem);
export var socialItemActionProp = PropTypes.instanceOf(SocialItemAction);
export var appInstallProp = PropTypes.instanceOf(AppInstall);
export var twitterStatusProp = PropTypes.instanceOf(TwitterStatus);
export var assistProp = PropTypes.instanceOf(Assist);
export var landscapeProp = PropTypes.instanceOf(Landscape);
export var landscapeConfigProp = PropTypes.instanceOf(LandscapeConfig);
export var companyProp = PropTypes.instanceOf(Company);
export var hubSettingsProp = PropTypes.instanceOf(HubSettings);
export var reportingPostProp = PropTypes.instanceOf(ReportingPost);
export var reportingPostMediaProp = PropTypes.instanceOf(ReportingPostMedia);